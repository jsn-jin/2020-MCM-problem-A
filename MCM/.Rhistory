autolayer(ma(first_block, 51), series = "50 yr MA") +
autolayer(ma(first_block, 71), series = "70 yr MA") +
xlab("Time") +
ylab("Temp")
first_block = ts(annual_avg_sst[,28], start = 1870, end = 2019)
autoplot(first_block) +
autolayer(ma(first_block, 21), series = "20 yr MA") +
autolayer(ma(first_block, 31), series = "30 yr MA") +
autolayer(ma(first_block, 51), series = "50 yr MA") +
autolayer(ma(first_block, 71), series = "70 yr MA") +
xlab("Time") +
ylab("Temp")
autoplot(first_block) +
autolayer(ma(first_block, 21), series = "20 yr MA") +
autolayer(ma(first_block, 31), series = "30 yr MA") +
autolayer(ma(first_block, 51), series = "50 yr MA") +
xlab("Time") +
ylab("SST")
autoplot(first_block) +
autolayer(ma(first_block, 11), series = "10 yr MA") +
autolayer(ma(first_block, 21), series = "20 yr MA") +
autolayer(ma(first_block, 31), series = "30 yr MA") +
xlab("Time") +
ylab("SST")
first_block = ts(annual_avg_sst[,28], start = 1870, end = 2019)
t = seq(from = 1870, to = 2019, by = 1)
# 111
arima111 = Arima(first_block, order = c(3,0,0), xreg = t)
plot(forecast(arima111, 50))
arima101 = Arima(first_block, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
arima101 = Arima(first_block, order = c(1,1,1), include.drift = TRUE)
plot(forecast(arima111, 50))
lines(arima111$fitted, col = "red")
# 111
arima111 = Arima(first_block, order = c(1,1,1), include.drift = TRUE)
plot(forecast(arima111, 50))
lines(arima111$fitted, col = "red")
# 101
arima101 = Arima(first_block, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
arima101
# 101
arima101 = Arima(first_block, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
arima111 = Arima(first_block, order = c(1,1,1), include.drift = TRUE)
plot(forecast(arima111, 50))
lines(arima111$fitted, col = "red")
arima110 = Arima(first_block, order = c(1,1,0), include.drift = TRUE)
plot(forecast(arima110, 50))
lines(arima110$fitted, col = "red")
arima011 = Arima(first_block, order = c(0,1,1), include.drift = TRUE)
plot(forecast(arima011, 50))
lines(arima011$fitted, col = "red")
arima201 = Arima(first_block, order = c(2,0,1), include.drift = TRUE)
plot(forecast(arima201, 50))
lines(arima201$fitted, col = "red")
arima201 = Arima(first_block, order = c(1,0,2), include.drift = TRUE)
plot(forecast(arima102, 50))
lines(arima102$fitted, col = "red")
# 102
arima102 = Arima(first_block, order = c(1,0,2), include.drift = TRUE)
plot(forecast(arima102, 50))
lines(arima102$fitted, col = "red")
accuracy(arima101)
accuracy(arima201)
accuracy(arima102)
accuracy(arima111)
accuracy(arima110)
accuracy(arima011)
arima201
# 201
arima201 = Arima(first_block, order = c(2,0,1), include.drift = TRUE)
arima201
accuracy(arima101)
accuracy(arima201)
accuracy(arima102)
accuracy(arima111)
accuracy(arima110)
accuracy(arima011)
arima102 = Arima(first_block, order = c(1,0,2), include.drift = TRUE)
plot(forecast(arima102, 50))
lines(arima102$fitted, col = "red")
arima102
arima101 = Arima(first_block, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
first_block = ts(annual_avg_sst[,1], start = 1870, end = 2019)
t = seq(from = 1870, to = 2019, by = 1)
first_block_train = ts(annual_avg_sst[1:130,1], start = 1870, end = 1999)
# 101
arima101 = Arima(first_block, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
first_block = ts(annual_avg_sst[,2], start = 1870, end = 2019)
t = seq(from = 1870, to = 2019, by = 1)
first_block_train = ts(annual_avg_sst[1:130,1], start = 1870, end = 1999)
# 101
arima101 = Arima(first_block, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
first_block = ts(annual_avg_sst[,3], start = 1870, end = 2019)
t = seq(from = 1870, to = 2019, by = 1)
first_block_train = ts(annual_avg_sst[1:130,1], start = 1870, end = 1999)
# 101
arima101 = Arima(first_block, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
first_block = ts(annual_avg_sst[,1], start = 1870, end = 2019)
t = seq(from = 1870, to = 2019, by = 1)
first_block_train = ts(annual_avg_sst[1:130,1], start = 1870, end = 1999)
# 101
arima101 = Arima(first_block, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
help(accuracy)
test = ts(annual_avg_sst[146:150,1], start = 2014, end = 2019)
train = ts(annual_avg_sst[1:145,1], start = 1870, end = 2014)
test = ts(annual_avg_sst[146:150,1], start = 2014, end = 2019)
accuracy(arima101, test = test)
first_block = ts(annual_avg_sst[,1], start = 1870, end = 2019)
# 101
arima101 = Arima(first_block, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
# 201
arima201 = Arima(first_block, order = c(2,0,1), include.drift = TRUE)
plot(forecast(arima201, 50))
lines(arima201$fitted, col = "red")
# 102
arima102 = Arima(first_block, order = c(1,0,2), include.drift = TRUE)
plot(forecast(arima102, 50))
lines(arima102$fitted, col = "red")
# 111
arima111 = Arima(first_block, order = c(1,1,1), include.drift = TRUE)
plot(forecast(arima111, 50))
lines(arima111$fitted, col = "red")
# 110
arima110 = Arima(first_block, order = c(1,1,0), include.drift = TRUE)
plot(forecast(arima110, 50))
lines(arima110$fitted, col = "red")
# 011
arima011 = Arima(first_block, order = c(0,1,1), include.drift = TRUE)
plot(forecast(arima011, 50))
lines(arima011$fitted, col = "red")
accuracy(arima101) # best model
# accuracy(arima201)
# accuracy(arima102)
accuracy(arima111)
accuracy(arima110)
accuracy(arima011)
accuracy(forecast(arima101,5), test = test)
help(accuracy)
accuracy(forecast(arima101,5), first_block, test = test)
train = ts(annual_avg_sst[1:145,1], start = 1870, end = 2014)
first_block = ts(annual_avg_sst[,1], start = 1870, end = 2019)
train = ts(annual_avg_sst[1:145,1], start = 1870, end = 2014)
# 101
arima101 = Arima(train, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
# 201
arima201 = Arima(train, order = c(2,0,1), include.drift = TRUE)
plot(forecast(arima201, 50))
lines(arima201$fitted, col = "red")
# 102
arima102 = Arima(train, order = c(1,0,2), include.drift = TRUE)
plot(forecast(arima102, 50))
lines(arima102$fitted, col = "red")
# 111
arima111 = Arima(train, order = c(1,1,1), include.drift = TRUE)
plot(forecast(arima111, 50))
lines(arima111$fitted, col = "red")
# 110
arima110 = Arima(train, order = c(1,1,0), include.drift = TRUE)
plot(forecast(arima110, 50))
lines(arima110$fitted, col = "red")
# 011
arima011 = Arima(train, order = c(0,1,1), include.drift = TRUE)
plot(forecast(arima011, 50))
lines(arima011$fitted, col = "red")
accuracy(arima101) # best model
# accuracy(arima201)
# accuracy(arima102)
accuracy(arima111)
accuracy(arima110)
accuracy(arima011)
accuracy(forecast(arima101,5), x = first_block, test = test)
accuracy(forecast(arima101), x = first_block, test = test)
accuracy(forecast(arima101), test = test)
training <- subset(first_block, end=length(first_block)-6)
test <- subset(first_block, start=length(first_block)-5)
first.train <- Arima(train, order = c(1,0,1), include.drift = TRUE)
first.train %>%
forecast(h=5) %>%
autoplot() + autolayer(test)
training <- subset(first_block, end=length(first_block)-11)
test <- subset(first_block, start=length(first_block)-10)
first.train <- Arima(train, order = c(1,0,1), include.drift = TRUE)
first.train %>%
forecast(h=10) %>%
autoplot() + autolayer(test)
first.train %>%
forecast(h=5) %>%
autoplot() + autolayer(test)
test
training
training <- subset(first_block, end=length(first_block)-10)
test <- subset(first_block, start=length(first_block)-9)
training
training <- subset(first_block, end=length(first_block)-10)
test <- subset(first_block, start=length(first_block)-9)
first.train <- Arima(train, order = c(1,0,1), include.drift = TRUE)
first.train %>%
forecast(h=10) %>%
autoplot() + autolayer(test)
first.train %>%
forecast(h=1) %>%
autoplot() + autolayer(test)
first.train %>%
forecast(h=15) %>%
autoplot() + autolayer(test)
training <- subset(first_block, end=length(first_block)-20)
test <- subset(first_block, start=length(first_block)-19)
first.train <- Arima(train, order = c(1,0,1), include.drift = TRUE)
first.train %>%
forecast(h=20) %>%
autoplot() + autolayer(test)
training <- subset(first_block, end=length(first_block)-20)
test <- subset(first_block, start=length(first_block)-19)
first.train <- Arima(training, order = c(1,0,1), include.drift = TRUE)
first.train %>%
forecast(h=20) %>%
autoplot() + autolayer(test)
training <- subset(first_block, end=length(first_block)-10)
test <- subset(first_block, start=length(first_block)-9)
first.train <- Arima(training, order = c(1,0,1), include.drift = TRUE)
first.train %>%
forecast(h=10) %>%
autoplot() + autolayer(test)
autoplot(training, series="Training data") +
autolayer(fitted(first.train, h = 10),
series="10-step fitted values")
first.test <- Arima(test, model=first.train)
accuracy(first.test)
training <- subset(first_block, end=length(first_block)-10)
test <- subset(first_block, start=length(first_block)-9)
first.train <- Arima(training, order = c(1,0,1), include.drift = TRUE)
first.train %>%
forecast(h=10) %>%
autoplot() + autolayer(test)
first.test <- Arima(test, model = first.train)
accuracy(first.test)
first.test <- Arima(test, model = first.train)
accuracy(first.test)
accuracy(first.test, test)
accuracy(forecast(first.test), test)
accuracy(forecast(first.test))
accuracy(forecast(first.train), test)
train.101 <- Arima(training, order = c(1,0,1), include.drift = TRUE)
train.101 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test)
accuracy(forecast(train.101), test)
train.111 <- Arima(training, order = c(1,1,1), include.drift = TRUE)
train.111 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test)
accuracy(forecast(train.111), test)
train.110 <- Arima(training, order = c(1,1,0), include.drift = TRUE)
train.110 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test)
train.011 <- Arima(training, order = c(0,1,1), include.drift = TRUE)
train.011 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test)
accuracy(forecast(train.101), test)
accuracy(forecast(train.101), test)
accuracy(forecast(train.110), test)
accuracy(forecast(train.011), test)
forecast = matrix(nrow = 50, ncol = 300)
for (b in 1:300) {
# Get the data at the b-th block: first@(-16.5, 62.5), last@(2.5, 48.5)
past_150_yr = annual_avg_sst[,b]
if (is.na(past_150_yr[1])){
forecast[,b] = rep(NA, 50)
} else {
fit = Arima(past_150_yr, order = c(1,0,1), include.drift = TRUE)
forecast[,b] = forecast(fit, 50)$mean
}
}
View(forecast)
adf.test(first_block)
arima101 = Arima(train, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
arima101
# 300
arima300 = Arima(train, order = c(3,0,0), include.drift = TRUE)
plot(forecast(arima300, 50))
lines(arima300$fitted, col = "red")
arima300
# 200
arima200 = Arima(train, order = c(2,0,0), include.drift = TRUE)
plot(forecast(arima200, 50))
lines(arima200$fitted, col = "red")
arima200
arima202 = Arima(train, order = c(2,0,2), include.drift = TRUE)
plot(forecast(arima202, 50))
lines(arima202$fitted, col = "red")
arima202
arima101 = Arima(train, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
first_block = ts(annual_avg_sst[,3], start = 1870, end = 2019)
adf.test(first_block)
# 101
arima101 = Arima(train, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
# 102
arima102 = Arima(first_block, order = c(1,0,2), include.drift = TRUE)
plot(forecast(arima102, 50))
lines(arima102$fitted, col = "red")
first_block = ts(annual_avg_sst[,1], start = 1870, end = 2019)
adf.test(first_block)
# 101
arima101 = Arima(first_block, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
arima101
arima300 = Arima(first_block, order = c(3,0,0), include.drift = TRUE)
plot(forecast(arima300, 50))
lines(arima300$fitted, col = "red")
arima201 = Arima(first_block, order = c(2,0,1), include.drift = TRUE)
plot(forecast(arima201, 50))
lines(arima201$fitted, col = "red")
# 102
arima102 = Arima(first_block, order = c(1,0,2), include.drift = TRUE)
plot(forecast(arima102, 50))
lines(arima102$fitted, col = "red")
first_block = ts(annual_avg_sst[,1], start = 1870, end = 2019)
adf.test(first_block)
# 101
arima101 = Arima(first_block, order = c(1,0,1), include.drift = TRUE)
plot(forecast(arima101, 50))
lines(arima101$fitted, col = "red")
# 300
arima300 = Arima(first_block, order = c(3,0,0), include.drift = TRUE)
plot(forecast(arima300, 50))
lines(arima300$fitted, col = "red")
# 201
arima201 = Arima(first_block, order = c(2,0,1), include.drift = TRUE)
plot(forecast(arima201, 50))
lines(arima201$fitted, col = "red")
# 102
arima102 = Arima(first_block, order = c(1,0,2), include.drift = TRUE)
plot(forecast(arima102, 50))
lines(arima102$fitted, col = "red")
accuracy(arima101) # best model
accuracy(arima300)
accuracy(arima201)
accuracy(arima102)
train.101 <- Arima(training, order = c(1,0,1), include.drift = TRUE)
train.101 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test)
train.300 <- Arima(training, order = c(3,0,0), include.drift = TRUE)
train.300 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test)
train.201 <- Arima(training, order = c(2,0,1), include.drift = TRUE)
train.201 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test)
train.102 <- Arima(training, order = c(1,0,2), include.drift = TRUE)
train.102 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test)
accuracy(forecast(train.101), test)
accuracy(forecast(train.300), test)
accuracy(forecast(train.201), test)
accuracy(forecast(train.102), test)
train.202 <- Arima(training, order = c(2,0,2), include.drift = TRUE)
train.202 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test)
accuracy(forecast(train.101), test)
accuracy(forecast(train.300), test)
accuracy(forecast(train.201), test)
accuracy(forecast(train.202), test)
train.102 <- Arima(training, order = c(1,0,2), include.drift = TRUE)
train.102 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test)
accuracy(forecast(train.101), test)
accuracy(forecast(train.300), test)
accuracy(forecast(train.201), test)
accuracy(forecast(train.102), test)
train.101 <- Arima(training, order = c(1,0,1), include.drift = TRUE)
train.101 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test)
train.300 <- Arima(training, order = c(3,0,0), include.drift = TRUE)
train.300 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test)
train.201 <- Arima(training, order = c(2,0,1), include.drift = TRUE)
train.201 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test)
train.102 <- Arima(training, order = c(1,0,2), include.drift = TRUE)
train.102 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test)
arima300
arima101
summary(arima300)
years_of_interest = c(2019, 2029, 2039, 2049, 2059, 2069)
years_col = years_of_interest - 2019 + 1
for (n in years_col){
sst = matrix(as.numeric(forecast[,n]), nrow = 15, ncol = 20, byrow = TRUE)
colnames(sst) = seq(-16.5, 2.5, 1)
rownames(sst) = seq(62.5, 48.5, -1)
# Visualize
file = paste("20", n+19, "_sst.png", sep = "")
main = paste( "Forecasted SST for  20", n+19, sep = "")
png(file, 610, 541)
par(mar = c(5, 5, 5, 5)) # Set the margin on all sides to 5
plot(sst, xlab = "Longitude", ylab = 'Latitude', main = main, breaks = seq(8,15,0.2), col = topo.colors)
dev.off()
}
library(tidyverse)
library('plot.matrix')
library(stringr)
library("viridis")
library(RColorBrewer)
forecast = read.csv("forecast_sst_50_t.csv", row.names = 1)
years_of_interest = c(2019, 2029, 2039, 2049, 2059, 2069)
years_col = years_of_interest - 2019 + 1
years_col
years_of_interest = c(2019, 2029, 2039, 2049, 2059, 2069)
years_col = years_of_interest - 2019
years_col
years_of_interest = c(2020, 2029, 2039, 2049, 2059, 2069)
years_col = years_of_interest - 2019
years_col
for (n in years_col){
sst = matrix(as.numeric(forecast[,n]), nrow = 15, ncol = 20, byrow = TRUE)
colnames(sst) = seq(-16.5, 2.5, 1)
rownames(sst) = seq(62.5, 48.5, -1)
# Visualize
file = paste("20", n+19, "_sst.png", sep = "")
main = paste( "Forecasted SST for  20", n+19, sep = "")
png(file, 610, 541)
par(mar = c(5, 5, 5, 5)) # Set the margin on all sides to 5
plot(sst, xlab = "Longitude", ylab = 'Latitude', main = main, breaks = seq(8,15,0.2), col = topo.colors)
dev.off()
}
years_of_interest = c(2020, 2024, 2029, 2034, 2039, 2044, 2049, 2054, 2059, 2064, 2069)
years_col = years_of_interest - 2019
for (n in years_col){
sst = matrix(as.numeric(forecast[,n]), nrow = 15, ncol = 20, byrow = TRUE)
colnames(sst) = seq(-16.5, 2.5, 1)
rownames(sst) = seq(62.5, 48.5, -1)
# Visualize
file = paste("20", n+19, "_sst.png", sep = "")
main = paste( "Forecasted SST for 20", n+19, sep = "")
png(file, 610, 541)
par(mar = c(5, 5, 5, 5)) # Set the margin on all sides to 5
plot(sst, xlab = "Longitude", ylab = 'Latitude', main = main, breaks = seq(8,15,0.2), col = topo.colors)
dev.off()
}
library(tidyverse)
library('plot.matrix')
library(stringr)
library("viridis")
library(RColorBrewer)
forecast = read.csv("forecast_sst_50_t.csv", row.names = 1)
library(tidyverse)
library(forecast)
library(stats)
library(tis)
library(trend)
library(tseries)
library(fpp2)
arima300 = Arima(first_block, order = c(3,0,0), include.drift = TRUE)
plot(forecast(arima300, 50))
lines(arima300$fitted, col = "red")
plot(forecast(arima300, 50), main = ("Forecasts from ARIMA(3,0,0) (SST at the First Grid)"))
lines(arima300$fitted, col = "red")
plot(forecast(arima300, 50), main = ("Forecasted SST at the First Grid from ARIMA(3,0,0)"))
lines(arima300$fitted, col = "red")
train.300 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test) + ggtitle("Out-of-Sample Evaluation ARIMA(3,0,0)")
train.101 <- Arima(training, order = c(1,0,1), include.drift = TRUE)
train.101 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test) + ggtitle("Out-of-Sample Evaluation ARIMA(1,0,1)")
train.201 <- Arima(training, order = c(2,0,1), include.drift = TRUE)
train.201 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test) + ggtitle("Out-of-Sample Evaluation ARIMA(2,0,1)")
train.102 <- Arima(training, order = c(1,0,2), include.drift = TRUE)
train.102 %>%
forecast(h = 10) %>%
autoplot() + autolayer(test) + ggtitle("Out-of-Sample Evaluation ARIMA(1,0,2)")
